CREATE TABLE CAMPUS (
    ID_CAMPUS INT NOT NULL PRIMARY KEY,
    NAME_CAMPUS VARCHAR(255)
);

CREATE TABLE LOCATIONS (
    ID_LOCATION INT NOT NULL PRIMARY KEY,
    NAME_LOCATION VARCHAR(255)
);

CREATE TABLE MAJORS (
    ID_MAJOR INT NOT NULL PRIMARY KEY,
    NAME_MAJOR VARCHAR(255)
);

CREATE TABLE CAMPUS_MAJORS (
    ID_CAMPUS_MAJOR INT NOT NULL PRIMARY KEY,
    TYPE_MAJOR INT,
    ID_CAMPUS INT,
    ID_MAJOR INT,
    FOREIGN KEY (ID_CAMPUS) REFERENCES CAMPUS(ID_CAMPUS),
    FOREIGN KEY (ID_MAJOR) REFERENCES MAJORS(ID_MAJOR)
);

CREATE TABLE SHIFTS (
    ID_SHIFT INT NOT NULL PRIMARY KEY,
    NAME_SHIFT VARCHAR(255)
);

CREATE TABLE GROUPS (
    ID_GROUP INT NOT NULL PRIMARY KEY,
    ID_MAJOR INT,
    FOREIGN KEY (ID_MAJOR) REFERENCES MAJORS(ID_MAJOR)
);

CREATE TABLE STUDENTS (
    ID_STUDENT INT NOT NULL PRIMARY KEY,
    NAME_STUDENT VARCHAR(255),
    LASTNAME1_STUDENT VARCHAR(255),
    LASTNAME2_STUDENT VARCHAR(255),
    ID_GROUP INT,
    FOREIGN KEY (ID_GROUP) REFERENCES GROUPS(ID_GROUP)
);

CREATE TABLE TEACHERS (
    ID_TEACHER INT NOT NULL PRIMARY KEY,
    NAME_TEACHER VARCHAR(255),
    LASTNAME1_TEACHER VARCHAR(255),
    LASTNAME2_TEACHER VARCHAR(255)
);

CREATE TABLE SEMESTERS (
    ID_SEMESTER INT NOT NULL PRIMARY KEY,
    SEMESTER INT
);

CREATE TABLE SUBJECTS (
    ID_SUBJECT INT NOT NULL PRIMARY KEY,
    NAME_SUBJECT VARCHAR(255)
);

CREATE TABLE TEACHER_GROUP_SUBJECT (
    ID_TEACHER_GROUP_SUBJECT INT NOT NULL PRIMARY KEY,
    ID_TEACHER INT,
    ID_GROUP INT,
    ID_SUBJECT INT,
    ID_SEMESTER INT,
    FOREIGN KEY (ID_TEACHER) REFERENCES TEACHERS(ID_TEACHER),
    FOREIGN KEY (ID_GROUP) REFERENCES GROUPS(ID_GROUP),
    FOREIGN KEY (ID_SUBJECT) REFERENCES SUBJECTS(ID_SUBJECT),
    FOREIGN KEY (ID_SEMESTER) REFERENCES SEMESTERS(ID_SEMESTER)
);

CREATE TABLE GRADES (
    ID_GRADE INT NOT NULL PRIMARY KEY,
    ID_TEACHER_GROUP_SUBJECT INT,
    ID_STUDENT INT,
    GRADE INT,
    FOREIGN KEY (ID_TEACHER_GROUP_SUBJECT) REFERENCES TEACHER_GROUP_SUBJECT(ID_TEACHER_GROUP_SUBJECT),
    FOREIGN KEY (ID_STUDENT) REFERENCES STUDENTS(ID_STUDENT)
);


SELECT * FROM STUDENTS;
SELECT * FROM TEACHERS;

SELECT * FROM MAJORS;
SELECT * FROM SUBJECTS;
SELECT G.ID_GRADE, G.GRADE, S.NAME_STUDENT, T.NAME_TEACHER, SB.NAME_SUBJECT
FROM GRADES G
JOIN STUDENTS S ON G.ID_STUDENT = S.ID_STUDENT
JOIN TEACHER_GROUP_SUBJECT TGS ON G.ID_TEACHER_GROUP_SUBJECT = TGS.ID_TEACHER_GROUP_SUBJECT
JOIN TEACHERS T ON TGS.ID_TEACHER = T.ID_TEACHER
JOIN SUBJECTS SB ON TGS.ID_SUBJECT = SB.ID_SUBJECT
WHERE S.ID_GROUP = [ID_DEL_GRUPO];
SELECT DISTINCT SB.NAME_SUBJECT
FROM GRADES G
JOIN STUDENTS S ON G.ID_STUDENT = S.ID_STUDENT
JOIN TEACHER_GROUP_SUBJECT TGS ON G.ID_TEACHER_GROUP_SUBJECT = TGS.ID_TEACHER_GROUP_SUBJECT
JOIN SUBJECTS SB ON TGS.ID_SUBJECT = SB.ID_SUBJECT
WHERE S.ID_STUDENT = [ID_DEL_ESTUDIANTE];
SELECT SB.NAME_SUBJECT, G.GRADE
FROM GRADES G
JOIN STUDENTS S ON G.ID_STUDENT = S.ID_STUDENT
JOIN TEACHER_GROUP_SUBJECT TGS ON G.ID_TEACHER_GROUP_SUBJECT = TGS.ID_TEACHER_GROUP_SUBJECT
JOIN SUBJECTS SB ON TGS.ID_SUBJECT = SB.ID_SUBJECT
WHERE S.ID_STUDENT = [ID_DEL_ESTUDIANTE];
SELECT AVG(G.GRADE) AS GLOBAL_GRADE
FROM GRADES G
JOIN STUDENTS S ON G.ID_STUDENT = S.ID_STUDENT
WHERE S.ID_STUDENT = [ID_DEL_ESTUDIANTE];
SELECT M.NAME_MAJOR, COUNT(*) AS NUM_REPROBADOS
FROM GRADES G
JOIN STUDENTS S ON G.ID_STUDENT = S.ID_STUDENT
JOIN GROUPS G ON S.ID_GROUP = G.ID_GROUP
JOIN MAJORS M ON G.ID_MAJOR = M.ID_MAJOR
WHERE G.GRADE < 6
GROUP BY M.NAME_MAJOR
ORDER BY NUM_REPROBADOS DESC
LIMIT 1;
SELECT M.NAME_MAJOR, COUNT(*) AS NUM_REPROBADOS
FROM GRADES G
JOIN STUDENTS S ON G.ID_STUDENT = S.ID_STUDENT
JOIN GROUPS G ON S.ID_GROUP = G.ID_GROUP
JOIN MAJORS M ON G.ID_MAJOR = M.ID_MAJOR
WHERE G.GRADE >= 6
GROUP BY M.NAME_MAJOR
ORDER BY NUM_REPROBADOS ASC
LIMIT 1;
SELECT G.ID_GROUP, COUNT(*) AS NUM_REPROBADOS
FROM GRADES G
JOIN STUDENTS S ON G.ID_STUDENT = S.ID_STUDENT
JOIN GROUPS GR ON S.ID_GROUP = GR.ID_GROUP
WHERE GR.ID_MAJOR = [ID_DE_LA_CARRERA] AND G.GRADE < 6
GROUP BY G.ID_GROUP
ORDER BY NUM_REPROBADOS DESC
LIMIT 1;
SELECT G.ID_GROUP, COUNT(*) AS NUM_REPROBADOS
FROM GRADES G
JOIN STUDENTS S ON G.ID_STUDENT = S.ID_STUDENT
JOIN GROUPS GR ON S.ID_GROUP = GR.ID_GROUP
WHERE GR.ID_MAJOR = [ID_DE_LA_CARRERA] AND G.GRADE < 6
GROUP BY G.ID_GROUP
ORDER BY NUM_REPROBADOS ASC
LIMIT 1;
